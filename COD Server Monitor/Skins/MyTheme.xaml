<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:COD_Server_Monitor">
    
    <!-- Stack Panel Style -->
    <Style TargetType="StackPanel" x:Key="ThemedPanel">
        <Setter Property="Background" Value="{DynamicResource DefaultColor}"/>
    </Style>

    <!-- Button Style -->
    <Style TargetType="Button" x:Key="ThemedButton">
        <Setter Property="Foreground" Value="{DynamicResource BtnForeground}"/>
        <Setter Property="Background" Value="{DynamicResource BtnBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BtnBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ControlColors" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ControlPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="ControlColors" Value="{DynamicResource BtnHoverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="ControlColors" Value="{DynamicResource BtnHoverBorder}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ControlPresenter" Value="{DynamicResource BtnHoverForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="ControlColors" Value="{DynamicResource BtnPressBackground}"/>
                            <Setter Property="BorderBrush" TargetName="ControlColors" Value="{DynamicResource BtnPressBorder}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ControlPresenter" Value="{DynamicResource BtnPressForeground}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="ControlColors" Value="{DynamicResource BtnFocusBackground}"/>
                            <Setter Property="BorderBrush" TargetName="ControlColors" Value="{DynamicResource BtnFocusBorder}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ControlPresenter" Value="{DynamicResource BtnFocusForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="ControlColors" Value="{DynamicResource BtnDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="ControlColors" Value="{DynamicResource BtnDisabledBorder}"/>
                            <Setter Property="TextElement.Foreground" TargetName="ControlPresenter" Value="{DynamicResource BtnDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Check Box Style -->
    <Style TargetType="CheckBox" x:Key="ThemedCheckBox">
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForeground}"/>
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorder}"/>
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="TextBox" x:Key="ThemedInput">
        <Setter Property="Foreground" Value="{DynamicResource InputForeground}"/>
        <Setter Property="Background" Value="{DynamicResource InputBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}"/>
        <Setter Property="Padding" Value="4,2,4,2"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InputDisabledForeground}"/>
                <Setter Property="Background" Value="{DynamicResource InputDisabledBackground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource InputDisabledBorder}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Grid Splitter Style -->
    <Style TargetType="GridSplitter" x:Key="ThemedGridSplitter">
        <Setter Property="Background" Value="{DynamicResource DefaultColor}"/>
    </Style>

    <!-- Data Grid Style -->
    <Style TargetType="DataGrid" x:Key="ThemedGrid">
        <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}"/>
        <Setter Property="Background" Value="{DynamicResource DataGridBackground}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridDivider}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridDivider}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}"/>
    </Style>

    <!-- Data Grid Header Style -->
    <Style TargetType="DataGridColumnHeader" x:Key="ThemedGridHeader">
        <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}"/>
        <Setter Property="Background" Value="{DynamicResource DataGridBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridDivider}"/>
        <Setter Property="Padding" Value="4,4,4,4"/>
    </Style>

    <!-- Data Grid Cell Style -->
    <Style TargetType="DataGridCell" x:Key="ThemedGridCell">
        <Setter Property="Foreground" Value="{DynamicResource InputForeground}"/>
        <Setter Property="Background" Value="{DynamicResource InputBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}"/>
        <Setter Property="Padding" Value="4,2,4,2"/>
    </Style>
    
    <!-- Context Menu Style -->
    <Style TargetType="ContextMenu" x:Key="ThemedContextMenu">
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContextMenuBorder}"/>
    </Style>
    
    <!-- Menu Item Style -->
    <Style TargetType="MenuItem" x:Key="ThemedMenuItem">
        <Setter Property="Foreground" Value="{DynamicResource MenuItemForeground}"/>
        <Setter Property="Background" Value="{DynamicResource MenuItemBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MenuItemBorder}"/>
    </Style>

</ResourceDictionary>